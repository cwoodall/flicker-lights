/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.7-dev at Sun Sep 11 22:07:32 2016. */

#ifndef PB_FLICKER_BASE_RESPONSE_PB_H_INCLUDED
#define PB_FLICKER_BASE_RESPONSE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _FlickerBaseResponse_ErrorType {
    FlickerBaseResponse_ErrorType_ACK = 0,
    FlickerBaseResponse_ErrorType_DECODE_ERROR = 1,
    FlickerBaseResponse_ErrorType_COMMUNICATION_ERROR = 2
} FlickerBaseResponse_ErrorType;
#define _FlickerBaseResponse_ErrorType_MIN FlickerBaseResponse_ErrorType_ACK
#define _FlickerBaseResponse_ErrorType_MAX FlickerBaseResponse_ErrorType_COMMUNICATION_ERROR
#define _FlickerBaseResponse_ErrorType_ARRAYSIZE ((FlickerBaseResponse_ErrorType)(FlickerBaseResponse_ErrorType_COMMUNICATION_ERROR+1))

/* Struct definitions */
typedef struct _FlickerBaseResponse {
    FlickerBaseResponse_ErrorType err;
/* @@protoc_insertion_point(struct:FlickerBaseResponse) */
} FlickerBaseResponse;

/* Default values for struct fields */

/* Initializer values for message structs */
#define FlickerBaseResponse_init_default         {(FlickerBaseResponse_ErrorType)0}
#define FlickerBaseResponse_init_zero            {(FlickerBaseResponse_ErrorType)0}

/* Field tags (for use in manual encoding/decoding) */
#define FlickerBaseResponse_err_tag              1

/* Struct field encoding specification for nanopb */
extern const pb_field_t FlickerBaseResponse_fields[2];

/* Maximum encoded size of messages (where known) */
#define FlickerBaseResponse_size                 2

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define FLICKER_BASE_RESPONSE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
